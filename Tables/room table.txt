CREATE TABLE `ho`.`room` (
  `id_room` INT NOT NULL AUTO_INCREMENT,
  `price` INT NULL,
  `bed_quantity` INT NULL,
  `id_room_type` INT NOT NULL,
  `id_hotel` INT NOT NULL,	
  `id_status_room` INT NOT NULL,
  `creation_date` DATE NULL,
  `creation_user` VARCHAR(45) NULL,
  `date_last_modification` DATE NULL,
  `user_last_modification` VARCHAR(45) NULL,
  PRIMARY KEY (`id_room`),
  INDEX `id_room_type_idx` (`id_room_type` ASC) VISIBLE,
  INDEX `id_status_idx` (`id_status_room` ASC) VISIBLE,
  INDEX `id_hotel_idx` (`id_hotel` ASC) VISIBLE,
  CONSTRAINT `id_room_type`
    FOREIGN KEY (`id_room_type`)
    REFERENCES `ho`.`room_type` (`id_room_type`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_status_room`
    FOREIGN KEY (`id_status_room`)
    REFERENCES `ho`.`status` (`id_status`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_hotel`
    FOREIGN KEY (`id_hotel`)
    REFERENCES `ho`.`hotel` (`id_hotel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

ALTER TABLE `ho`.`room` 
COMMENT = 'Repository to store hotel rooms' ;


DROP TRIGGER IF EXISTS `ho`.`room_BEFORE_INSERT`;

DELIMITER $$
USE `ho`$$
CREATE DEFINER = CURRENT_USER TRIGGER `ho`.`room_BEFORE_INSERT` BEFORE INSERT ON `room` FOR EACH ROW
BEGIN
	IF NEW.creation_date IS NULL OR NEW.creation_user IS NULL THEN 
		SET NEW.creation_date = CURDATE();
        SET NEW.creation_user = SYSTEM_USER();
	END IF;
END$$
DELIMITER ;
DROP TRIGGER IF EXISTS `ho`.`room_BEFORE_UPDATE`;

DELIMITER $$
USE `ho`$$
CREATE DEFINER = CURRENT_USER TRIGGER `ho`.`room_BEFORE_UPDATE` BEFORE UPDATE ON `room` FOR EACH ROW
BEGIN
	IF NEW.date_last_modification IS NULL OR NEW.user_last_modification IS NULL THEN
		SET NEW.date_last_modification = CURDATE();
        SET NEW.user_last_modification = SYSTEM_USER();
	END IF;
END$$
DELIMITER ;

