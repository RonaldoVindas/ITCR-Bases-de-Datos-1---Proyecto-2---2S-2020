CREATE TABLE `ho`.`district` (
  `id_district` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `id_canton` INT NOT NULL,
  `creation_date` DATE NULL,
  `creation_user` VARCHAR(45) NULL,
  `date_last_modification` DATE NULL,
  `user_last_modification` VARCHAR(45) NULL,
  PRIMARY KEY (`id_district`),
  INDEX `id_canton_idx` (`id_canton` ASC) VISIBLE,
  CONSTRAINT `id_canton`
    FOREIGN KEY (`id_canton`)
    REFERENCES `ho`.`canton` (`id_canton`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
COMMENT = 'Repository to store different districts';
DROP TRIGGER IF EXISTS `ho`.`district_BEFORE_INSERT`;

DELIMITER $$
USE `ho`$$
CREATE DEFINER = CURRENT_USER TRIGGER `ho`.`district_BEFORE_INSERT` BEFORE INSERT ON `district` FOR EACH ROW
BEGIN
	IF NEW.creation_date IS NULL OR NEW.creation_user IS NULL THEN 
		SET NEW.creation_date = CURDATE();
        SET NEW.creation_user = SYSTEM_USER();
	END IF;
END$$
DELIMITER ;
DROP TRIGGER IF EXISTS `ho`.`district_BEFORE_UPDATE`;

DELIMITER $$
USE `ho`$$
CREATE DEFINER = CURRENT_USER TRIGGER `ho`.`district_BEFORE_UPDATE` BEFORE UPDATE ON `district` FOR EACH ROW
BEGIN
	IF NEW.date_last_modification IS NULL OR NEW.user_last_modification IS NULL THEN
		SET NEW.date_last_modification = CURDATE();
        SET NEW.user_last_modification = SYSTEM_USER();
	END IF;
END$$
DELIMITER ;
