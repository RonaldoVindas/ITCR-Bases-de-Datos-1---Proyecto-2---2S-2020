CREATE TABLE `ho`.`person` (
  `id_person` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `birthday` DATE NULL,
  `community` VARCHAR(100) NULL,
  `email` VARCHAR(45) NULL,
  `username` VARCHAR(45) NULL,
  `bank_account_number` INT NULL,
  `id_gender` INT NOT NULL,
  `id_nationality` INT NOT NULL,
  `id_user_type` INT NOT NULL,
  `creation_date` DATE NULL,
  `creation_user` VARCHAR(45) NULL,
  `date_last_modification` DATE NULL,
  `user_last_modification` VARCHAR(45) NULL,
  PRIMARY KEY (`id_person`),
  INDEX `id_gender_idx` (`id_gender` ASC) VISIBLE,
  INDEX `id_nationality_idx` (`id_nationality` ASC) VISIBLE,
  INDEX `id_user_type_idx` (`id_user_type` ASC) VISIBLE,
  CONSTRAINT `id_gender`
    FOREIGN KEY (`id_gender`)
    REFERENCES `ho`.`gender` (`id_gender`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_nationality`
    FOREIGN KEY (`id_nationality`)
    REFERENCES `ho`.`nationality` (`id_nationality`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_user_type`
    FOREIGN KEY (`id_user_type`)
    REFERENCES `ho`.`user_type` (`id_user_type`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
COMMENT = 'Repository to store people';
DROP TRIGGER IF EXISTS `ho`.`person_BEFORE_INSERT`;

DELIMITER $$
USE `ho`$$
CREATE DEFINER = CURRENT_USER TRIGGER `ho`.`person_BEFORE_INSERT` BEFORE INSERT ON `person` FOR EACH ROW
BEGIN
	IF NEW.creation_date IS NULL OR NEW.creation_user IS NULL THEN 
		SET NEW.creation_date = CURDATE();
        SET NEW.creation_user = SYSTEM_USER();
	END IF;
END$$
DELIMITER ;
DROP TRIGGER IF EXISTS `ho`.`person_BEFORE_UPDATE`;

DELIMITER $$
USE `ho`$$
CREATE DEFINER = CURRENT_USER TRIGGER `ho`.`person_BEFORE_UPDATE` BEFORE UPDATE ON `person` FOR EACH ROW
BEGIN
	IF NEW.date_last_modification IS NULL OR NEW.user_last_modification IS NULL THEN
		SET NEW.date_last_modification = CURDATE();
        SET NEW.user_last_modification = SYSTEM_USER();
	END IF;
END$$
DELIMITER ;
